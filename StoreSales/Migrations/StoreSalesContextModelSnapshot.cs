// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreSales.API.DbContexts;

#nullable disable

namespace StoreSales.API.Migrations
{
    [DbContext(typeof(StoreSalesContext))]
    partial class StoreSalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("StoreSales.API.Entities.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 3,
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("StoreSales.API.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "BBQ flavored potato chips.",
                            Name = "Chips",
                            Price = 1.50m,
                            Type = "Food"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Colorful cup with a mascot printed on it.",
                            Name = "Cup",
                            Price = 1.00m,
                            Type = "Misc"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Unleaded Gasoline",
                            Name = "Gas",
                            Price = 3.25m,
                            Type = "Fuel"
                        });
                });

            modelBuilder.Entity("StoreSales.API.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            Quantity = 2,
                            TransactionId = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            Quantity = 1,
                            TransactionId = 1
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 3,
                            Quantity = 5,
                            TransactionId = 2
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 3,
                            Quantity = 3,
                            TransactionId = 3
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 1,
                            Quantity = 1,
                            TransactionId = 3
                        },
                        new
                        {
                            Id = 6,
                            ItemId = 1,
                            Quantity = 1,
                            TransactionId = 4
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 2,
                            Quantity = 1,
                            TransactionId = 4
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 3,
                            Quantity = 10,
                            TransactionId = 4
                        });
                });

            modelBuilder.Entity("StoreSales.API.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Bob",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mary",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jim",
                            LastName = "Bo"
                        });
                });

            modelBuilder.Entity("StoreSales.API.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeOccurred")
                        .HasColumnType("TEXT");

                    b.Property<string>("note")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonId = 2,
                            TimeOccurred = new DateTime(2023, 5, 10, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            PersonId = 1,
                            TimeOccurred = new DateTime(2023, 5, 11, 15, 30, 15, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            PersonId = 1,
                            TimeOccurred = new DateTime(2023, 5, 13, 9, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            PersonId = 3,
                            TimeOccurred = new DateTime(2023, 5, 18, 20, 30, 30, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StoreSales.API.Entities.Order", b =>
                {
                    b.HasOne("StoreSales.API.Entities.Transaction", null)
                        .WithMany("Contents")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreSales.API.Entities.Transaction", b =>
                {
                    b.HasOne("StoreSales.API.Entities.Person", "Person")
                        .WithMany("Purchases")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("StoreSales.API.Entities.Person", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("StoreSales.API.Entities.Transaction", b =>
                {
                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
